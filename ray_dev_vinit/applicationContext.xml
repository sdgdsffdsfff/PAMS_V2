<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd"
	default-lazy-init="false">

	<!-- 使用annotation 自动注册bean,并保证@Required,@Autowired的属性被注入 -->
	<context:component-scan base-package="com.ray.app.query,com.ray.app.**.dao,com.ray.app.**.service,com.ray.xj.sgcc.irm.**.dao,com.ray.xj.sgcc.irm.**.service,com.ray.xj.sgcc.irm.**.action" />

	<bean id="datasource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@127.0.0.1:1521:orcl" />
		<property name="username" value="pams" />
		<property name="password" value="pams123" />
	</bean>
	<!-- hibernate sessionFactory 创建 -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="datasource" />
		<property name="namingStrategy">
			<bean class="org.hibernate.cfg.ImprovedNamingStrategy" />
		</property>

		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop> <!--validate create create-drop update -->
				<prop key="hibernate.dialect">org.hibernate.dialect.OracleDialect</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
				<prop key="hibernate.cache.provider_configuration_file_resource_path">ehcache-hibernate.xml</prop>
			</props>
		</property>
		<property name="packagesToScan" value="com.ray.app.**.entity,com.ray.xj.sgcc.irm.**.entity" />
	</bean>

	<!-- 事务管理器配置,单数据源事务 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />

	<bean id="mgr_ibase" class="com.headray.core.spring.mgr.BaseMgr" autowire="byName" >
		<property name="dataSource" ref="datasource" />
	</bean>
	
	<!-- 数据库方言 -->
	<bean id="dialect" class="com.headray.framework.services.db.dialect.DialectOracle" />		
	
	<!-- 通用查询BEAN -->
	<bean id="ipageagent" class="com.headray.app.query.function.PageAgent" autowire="byName" >
		<property name="dataSource" ref="datasource" />
	</bean>

	<bean id="ipageiterator" class="com.headray.app.query.function.PageIterator" autowire="byName" >
		<property name="ipageagent" ref="ipageagent" />
	</bean>	

	<!-- 通用查询BEAN -->

	<bean id="mysearchDao" class="com.ray.app.query.dao.SearchDao">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<bean id="sqlselect" class="com.ray.app.query.function.view.SQLSelect">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<bean id="reportDao" class="com.ray.app.chart.report.dao.ReportDao" autowire="byName">
		<property name="dataSource" ref="datasource" />
	</bean>
</beans>
